
// This file was auto-generated by ML.NET Model Builder. 

using System;
using System.Text;
using RandomNameGeneratorLibrary;

namespace SentimentModel.ConsoleApp
{
    enum Gender
    {
        MALE,
        FEMALE
    }
    class StudentInfo
    {
        public string Name { get; set; }
        public  string Lastname { get; set; }
        public Gender Gender { get; set; }
        public  int G1 { get; set; }
        public  int G2 { get; set; }
        public  int G3 { get; set; }
        public  int G4 { get; set; }
        public int Qasked { get; set; }
        public int LabAttendance { get; set; }
        public  int ClassAttendance { get; set; }
        private bool Honesty { get; set; } = false;
    }
    class Program
    {
        private static double _labAttendanceWeight = 0.2 / 5.0;
        private static  double _classAttendanceWeight = 0.4 / 16.0;
        private  static double _g1Weight = (0.2 / 60.0) ;
        private static  double _g2Weight = (0.2 / 60.0) ;
        private  static double _g3Weight = (0.2 / 60.0) ;
        private static double _g4Weight = (0.2 / 20.0);
        private static double _qaskedWeight = 0.01;

        private static void Main(string[] args)
        {
            var result = new StringBuilder();
            var resultCleanup = new StringBuilder();
            var _rnd = new Random();
            var personGenerator = new PersonNameGenerator();
            var males = personGenerator.GenerateMultipleMaleFirstAndLastNames(50000);
            var females = personGenerator.GenerateMultipleFemaleFirstAndLastNames(50000);
            foreach (var male in males)
            {
                var g1 = _rnd.Next(0, 21);
                var g2 = _rnd.Next(0, 21);
                var g3 = _rnd.Next(0, 21);
                var g4 = _rnd.Next(0, 21);
                var labAttendance = _rnd.Next(0, 6);
                var classAttendance = _rnd.Next(0, 17);
                ///////////////////////////////////////////////

                var g1Score = g1 * (_g1Weight );
                var g2Score = g2 * (_g2Weight);
                var g3Score = g3 * (_g3Weight);
                var g4Score = g4 * (_g4Weight);
                var labAttendanceScore = labAttendance * _labAttendanceWeight;
                var classAttendanceScore = classAttendance * _classAttendanceWeight;
                
                



                var totalScore = (g1Score ) + (g2Score ) + (g3Score ) + g4Score + labAttendanceScore + classAttendanceScore;
                var qasked = _rnd.Next(0, 30);
                var maxloop = Math.Min(10, qasked);
                 totalScore += maxloop * _qaskedWeight;
                
                ///////////////////////////////////////////////
                result.Append(male.Split(' ')[0] + '\t' + male.Split(' ')[1] + '\t' + "male" + '\t'  + g1  + '\t' + g2 + '\t' + g3 + '\t' + g4 + '\t' + labAttendance + '\t' + classAttendance + '\t' +  qasked + '\t'   + (totalScore > 0.5 ? 1 : 0)  + Environment.NewLine);
                resultCleanup.Append(g1.ToString() + '\t' + g2.ToString() + '\t' + g3.ToString() + '\t' + g4.ToString() + '\t' + labAttendance.ToString() + '\t' + classAttendance.ToString() + '\t' +  qasked + '\t'   + (totalScore > 0.5 ? 1 : 0)  + Environment.NewLine);
            }
            foreach (var female in females)
            {
                var g1 = _rnd.Next(0, 21);
                var g2 = _rnd.Next(0, 21);
                var g3 = _rnd.Next(0, 21);
                var g4 = _rnd.Next(0, 21);
                var labAttendance = _rnd.Next(0, 6);
                var classAttendance = _rnd.Next(0, 17);
                /////////////////////////////////////////////
                
                
                var g1Score = g1 * (_g1Weight );
                var g2Score = g2 * (_g2Weight);
                var g3Score = g3 * (_g3Weight);
                var g4Score = g4 * (_g4Weight);
                var labAttendanceScore = labAttendance * _labAttendanceWeight;
                var classAttendanceScore = classAttendance * _classAttendanceWeight;
                
                

                var totalScore = (g1Score ) + (g2Score ) + (g3Score ) + g4Score + labAttendanceScore + classAttendanceScore;
                var qasked = _rnd.Next(0, 30);
                var maxloop = Math.Min(10, qasked);
                totalScore += maxloop * _qaskedWeight;
                
                ///////////////////////////////////////////////
                result.Append(female.Split(' ')[0] + '\t' + female.Split(' ')[1] + '\t' + "male" + '\t'  + g1  + '\t' + g2 + '\t' + g3 + '\t' + g4 + '\t' + labAttendance + '\t' + classAttendance + '\t' +  qasked + '\t'   + (totalScore > 0.5 ? 1 : 0)  + Environment.NewLine);
                resultCleanup.Append(g1.ToString() + '\t' + g2.ToString() + '\t' + g3.ToString() + '\t' + g4.ToString() + '\t' + labAttendance.ToString() + '\t' + classAttendance.ToString() + '\t' +  qasked + '\t'   + (totalScore > 0.5 ? 1 : 0)  + Environment.NewLine);
            }
            System.IO.File.WriteAllText( "result.txt",result.ToString());
            System.IO.File.WriteAllText( "result_cleanedup.txt",resultCleanup.ToString());
        }
    }
}
